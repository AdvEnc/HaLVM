# BANNERSTART
# - Copyright 2006-2008, Galois, Inc.
# - This software is distributed under a standard, three-clause BSD license.
# - Please see the file LICENSE, distributed with this software, for specific
# - terms and conditions.
# Author: Adam Wick <awick@galois.com>
# BANNEREND

HaLVM_VERSION           := @PACKAGE_VERSION@
GHC_VER                 := 7.8.1
GIT_LIBRARIES_URL       := git://github.com/GaloisInc

# Top of the build system, set by auto[re]conf.  This allows any other makefile
# to include common.mk and get a consistent variable environment.
TOPDIR      := @abs_top_builddir@

prefix      := @prefix@
exec_prefix := @exec_prefix@
bindir      := @bindir@
libdir      := @libdir@

halvm-dir   := $(libdir)/HaLVM/$(HaLVM_VERSION)

# Should we build with GMP?
USE_GMP                 := @USE_GMP@
GMP_LIB_PATH            := @GMP_LIB_PATH@
GMP_ABI                 := @ABI@
INTEGER_LIBRARY         := @INTEGER_LIBRARY@

#
# External programs of interest
#
INSTALL                 := @INSTALL@
#AR                      := @AR@
CC                      := @CC@
#CP                      := @CP@
LD                      := @LD@
#LN                      := @LN@
#MV                      := @MV@
NM                      := @NM@
RM                      := @RM@
#CAT                     := @CAT@
CPP                     := @CPP@
GHC                     := @GHC@
GIT                     := @GIT@
SED                     := @SED@
#TAR                     := @TAR@
ECHO                    := @ECHO@
#FIND                    := @FIND@
#GREP                    := @GREP@
#MAKE                    := @MAKE@
#PERL                    := @PERL@
#TAIL                    := @TAIL@
#WGET                    := @WGET@
#CHMOD                   := @CHMOD@
#MKDIR                   := @MKDIR@
#PATCH                   := @PATCH@
TOUCH                   := @TOUCH@
#XARGS                   := @XARGS@
OBJDUMP                 := @OBJDUMP@
AUTORECONF              := @AUTORECONF@

#
# Interesting flags from configure
#

NO_UNIT_AT_A_TIME_OPT  := @NO_UNIT_AT_A_TIME_OPT@
NO_STACK_PROT_OPT      := @NO_STACK_PROT_OPT@
NO_FRAME_PTR_OPT       := @NO_FRAME_PTR_OPT@
NO_ASYNC_UNWIND_OPT    := @NO_ASYNC_UNWIND_OPT@
NO_RED_ZONE_OPT        := @NO_RED_ZONE_OPT@
NO_BUILTIN_OPT         := @NO_BUILTIN_OPT@
ARCH_OPT               := @ARCH_OPTION@
ARCH                   := @ARCHITECTURE@
XEN_INCLUDE_DIR        := @XEN_INCLUDE_DIRECTORY@

#
# Derivations of the above.
#

BUILD_ARCH             := $(ARCH)-unknown-linux
HOST_ARCH              := $(BUILD_ARCH)
TARGET_ARCH            := $(ARCH)-unknown-HaLVM

ARCH_CC_FLAGS         := $(NO_UNIT_AT_A_TIME_OPT)
ARCH_CC_FLAGS         += $(NO_STACK_PROT_OPT)
ARCH_CC_FLAGS         += $(NO_FRAME_PTR_OPT)
ARCH_CC_FLAGS         += $(NO_ASYNC_UNWIND_OPT)
ARCH_CC_FLAGS         += $(NO_RED_ZONE_OPT)
ARCH_CC_FLAGS         += $(NO_BUILTIN_OPT)
ARCH_CC_FLAGS         += $(ARCH_OPT)
ARCH_GHC_FLAGS        := $(foreach f,$(ARCH_CC_FLAGS),-optc$f)
ARCH_GHC_FLAGS        += $(ARCH_OPT)

CFLAGS                := -O2 -Wall -Wno-unused-variable
CFLAGS                += -I$(XEN_INCLUDE_DIR)
CFLAGS                += $(ARCH_CC_FLAGS)

GHCFLAGS              := -O2 -H32m
GHCFLAGS              += $(ARCH_GHC_FLAGS)

#
# Library configuration
#

#GOOD_GHC_LIBS           = array base base3-compat bytestring containers	\
#                          extensible-exceptions filepath fgl haskell98	\
#                          integer-gmp mtl old-locale old-time pretty	\
#                          random syb template-haskell time
#HALVM_LIBS              = cereal BitFiddler halfs HALVMCore		\
#                          libDomainBuilder QuickCheck RealDevice	\
#                          RendezvousLib XenDevice log4h BoundedChan
#
#ALL_LIBRARIES           = $(GOOD_GHC_LIBS) $(HALVM_LIBS)
#
#ORIG_GHC_LIB_LOCS       = $(addprefix xen-ghc/libraries/,$(GOOD_GHC_LIBS))
#NEW_GHC_LIB_LOCS        = $(addprefix $(TOPDIR)/libraries/,$(GOOD_GHC_LIBS))
#HALVM_LIB_TARGETS       = $(addprefix $(TOPDIR)/libraries/.built-,$(ALL_LIBRARIES))
#
##
## Internal programs of interest
##
#PLATFORM_GHC_PATH       = $(TOPDIR)/platform_ghc
#PLATFORM_LIB_PATH       = $(PLATFORM_GHC_PATH)/lib/ghc-$(GHC_VER)
#PLATFORM_PACKAGE_D      = $(PLATFORM_LIB_PATH)/package.conf.d
#PLATFORM_GHC            = $(PLATFORM_GHC_PATH)/bin/ghc
#PLATFORM_GHC_PKG        = $(PLATFORM_GHC_PATH)/bin/ghc-pkg-$(GHC_VER)
#PLATFORM_HSC2HS         = $(PLATFORM_GHC_PATH)/bin/hsc2hs-ghc-$(GHC_VER)
#PLATFORM_HADDOCK        = $(PLATFORM_GHC_PATH)/bin/haddock
#PLATFORM_ALEX           = $(PLATFORM_GHC_PATH)/bin/alex
#PLATFORM_HAPPY          = $(PLATFORM_GHC_PATH)/bin/happy
#PLATFORM_HSCOLOUR       = $(PLATFORM_GHC_PATH)/bin/HsColour
#PLATFORM_HSC2HS         = $(PLATFORM_GHC_PATH)/bin/hsc2hs
#PLATFORM_CABAL_EXE      = $(PLATFORM_GHC_PATH)/bin/cabal
#PLATFORM_CABAL          = $(PLATFORM_CABAL_EXE) --config-file $(PLATFORM_GHC_PATH)/cabal_config
#HADDOCK                 = $(PLATFORM_GHC_PATH)/bin/haddock
#PLATFORM_HSC2HS_OPTS    = --cc=gcc -I$(PLATFORM_LIB_PATH)/include
#GHC_CABAL               = $(PLATFORM_GHC_PATH)/bin/ghc-cabal
#
##
## HaLVM Distribution Paths
##
#
#HALVM_LIBDIR        = $(TOPDIR)/dist/lib/HaLVM-$(HaLVM_VERSION)
#HALVM_BINDIR        = $(TOPDIR)/dist/bin
#HALVM_DOCDIR        = $(TOPDIR)/dist/share/doc/HaLVM-$(HaLVM_VERSION)
#HALVM_EXMDIR        = $(TOPDIR)/static-bits/examples
#
#HALVM_GHC           = $(HALVM_BINDIR)/halvm-ghc
#HALVM_GHC_PKG       = $(HALVM_BINDIR)/halvm-ghc-pkg
#HALVM_CABAL         = $(HALVM_BINDIR)/halvm-cabal
#HALVM_CONFIG        = $(HALVM_BINDIR)/halvm-config
#HALVM_MKDIR         = $(HALVM_BINDIR)/make_halvm_dir.py
#
#HALVM_UNLIT         = $(HALVM_LIBDIR)/unlit
#HALVM_GHC_ASM       = $(HALVM_LIBDIR)/ghc-asm
#HALVM_GHC_BIN       = $(HALVM_LIBDIR)/ghc-$(GHC_VER)
#HALVM_GHC_PKG_BIN   = $(HALVM_LIBDIR)/ghc-pkg.bin
#HALVM_GHC_SPLIT     = $(HALVM_LIBDIR)/ghc-split
#HALVM_LDKERNEL      = $(HALVM_LIBDIR)/ldkernel
#HALVM_HSC2HS        = $(HALVM_LIBDIR)/hsc2hs
#HALVM_HSC2HS_BIN    = $(HALVM_LIBDIR)/hsc2hs-bin
#HALVM_HADDOCK       = $(HALVM_LIBDIR)/haddock
#HALVM_HSCOLOUR      = $(HALVM_LIBDIR)/HsColour
#HALVM_ALEX          = $(HALVM_LIBDIR)/alex
#HALVM_HAPPY         = $(HALVM_LIBDIR)/happy
#HALVM_CABAL_EXE     = $(HALVM_LIBDIR)/cabal
#HALVM_START_O       = $(HALVM_LIBDIR)/start.o
#
#HALVM_LIBTOOLS      = $(HALVM_UNLIT)          \
#                      $(HALVM_GHC_ASM)        \
#                      $(HALVM_GHC_BIN)        \
#                      $(HALVM_GHC_PKG_BIN)    \
#                      $(HALVM_GHC_SPLIT)      \
#                      $(HALVM_ALEX)           \
#                      $(HALVM_HSC2HS_BIN)     \
#                      $(HALVM_HADDOCK)        \
#                      $(HALVM_HAPPY)          \
#                      $(HALVM_LDKERNEL)       \
#                      $(HALVM_CABAL_EXE)      \
#                      $(HALVM_HSCOLOUR)
#
##
## "False" targets
##
#
#GHC_XENDIR_TARGET	= $(TOPDIR)/xen-ghc/mk/build.mk
#
##
## HTTP information
##
#GHC_BASE                = http://darcs.haskell.org/download/dist/$(GHC_VER)
#HACKAGE                 = http://hackage.haskell.org/packages/archive
#build_hackage_tarball   = $(TOPDIR)/tarballs/$1-$2.tar.gz
#build_hackage_link      = $(HACKAGE)/$1/$2/$1-$2.tar.gz
#build_hackage_target    = $(TOPDIR)/platform_ghc/lib/$1-$2/ghc-$(GHC_VER)/libHS$(1)-$(2).a
#
#GHC_BINARY_LINK     = $(GHC_BASE)/@GHC_BINARY_NAME@
#GHC_BINARY_TARBALL  = $(TOPDIR)/tarballs/@GHC_BINARY_NAME@
#GHC_SRC_LINK        = $(GHC_BASE)/ghc-$(GHC_VER)-src.tar.bz2
#GHC_SRC_TARBALL     = $(TOPDIR)/tarballs/ghc-$(GHC_VER)-src.tar.bz2
#GHC_EXTRAS_LINK     = $(GHC_BASE)/ghc-$(GHC_VER)-src-extralibs.tar.bz2
#GHC_EXTRAS_TARBALL  = $(TOPDIR)/tarballs/ghc-$(GHC_VER)-src-extralibs.tar.bz2
#
#MTL_VERSION         = 1.1.0.2
#MTL_LINK            = $(call build_hackage_link,mtl,$(MTL_VERSION))
#MTL_TARBALL         = $(call build_hackage_tarball,mtl,$(MTL_VERSION))
#MTL_TARGET          = $(call build_hackage_target,mtl,$(MTL_VERSION))
#NETWORK_VERSION     = 2.2.1.7
#NETWORK_LINK        = $(call build_hackage_link,network,$(NETWORK_VERSION))
#NETWORK_TARBALL     = $(call build_hackage_tarball,network,$(NETWORK_VERSION))
#NETWORK_TARGET      = $(call build_hackage_target,network,$(NETWORK_VERSION))
#PARSEC_VERSION      = 3.1.0
#PARSEC_LINK         = $(call build_hackage_link,parsec,$(PARSEC_VERSION))
#PARSEC_TARBALL      = $(call build_hackage_tarball,parsec,$(PARSEC_VERSION))
#PARSEC_TARGET       = $(call build_hackage_target,parsec,$(PARSEC_VERSION))
#CABAL_VERSION       = 1.8.0.6
#CABAL_LINK          = $(call build_hackage_link,Cabal,$(CABAL_VERSION))
#CABAL_TARBALL       = $(call build_hackage_tarball,Cabal,$(CABAL_VERSION))
#CABAL_TARGET        = $(call build_hackage_target,Cabal,$(CABAL_VERSION))
#ZLIB_VERSION        = 0.5.2.0
#ZLIB_LINK           = $(call build_hackage_link,zlib,$(ZLIB_VERSION))
#ZLIB_TARBALL        = $(call build_hackage_tarball,zlib,$(ZLIB_VERSION))
#ZLIB_TARGET         = $(call build_hackage_target,zlib,$(ZLIB_VERSION))
#HTTP_VERSION        = 4000.0.9
#HTTP_LINK           = $(call build_hackage_link,HTTP,$(HTTP_VERSION))
#HTTP_TARBALL        = $(call build_hackage_tarball,HTTP,$(HTTP_VERSION))
#HTTP_TARGET         = $(call build_hackage_target,HTTP,$(HTTP_VERSION))
#CI_VER              = 0.8.2
#CABAL_INST_LINK     = $(call build_hackage_link,cabal-install,$(CI_VER))
#CABAL_INST_TARBALL  = $(call build_hackage_tarball,cabal-install,$(CI_VER))
#ifeq ($(ARCH),x86_64)
#CABAL_ORIG_SIG      = e4d9e6cfffe2de416a529213f6ec0f28
#else
#CABAL_ORIG_SIG      = 0fa5fba8bc5459391e6ec30b2b2ff632
#endif
#FGL_VER             = 5.4.2.2
#FGL_LINK            = $(call build_hackage_link,fgl,$(FGL_VER))
#FGL_TARBALL         = $(call build_hackage_tarball,fgl,$(FGL_VER))
#TIME_VER            = 1.2.0.3
#TIME_LINK           = $(call build_hackage_link,time,$(TIME_VER))
#TIME_TARBALL        = $(call build_hackage_tarball,time,$(TIME_VER))
#BC_VER              = 1.0.0.0
#BC_LINK             = $(call build_hackage_link,BoundedChan,$(BC_VER))
#BC_TARBALL          = $(call build_hackage_tarball,BoundedChan,$(BC_VER))
#GHC_PATHS_VERSION   = 0.1.0.6
#HADDOCK_VERSION     = 2.7.2
#ALEX_VERSION        = 2.3.3
#HAPPY_VERSION       = 1.18.5
#HSCOLOUR_VERSION    = 1.16
#
## Install targets
#DESTDIR            ?=
#PACKAGE_TARNAME     = HaLVM-$(HaLVM_VERSION)
#prefix              = @prefix@
#exec_prefix         = @exec_prefix@
#datarootdir         = @datarootdir@
#INSTALL_PREFIX      = $(DESTDIR)@prefix@
#INSTALL_BINDIR      = $(DESTDIR)@bindir@
#INSTALL_LIBDIR      = $(DESTDIR)@libdir@/HaLVM-1.0.0
#INSTALL_DOCDIR      = $(DESTDIR)@docdir@
#INSTALL_EXMDIR      = $(DESTDIR)@datadir@/HaLVM-1.0.0
#INSTALL_PREFIX2     = @prefix@
#INSTALL_BINDIR2     = @bindir@
#INSTALL_LIBDIR2     = @libdir@/HaLVM-1.0.0
#INSTALL_DOCDIR2     = @docdir@
#INSTALL_EXMDIR2     = @datadir@/HaLVM-1.0.0
#
#define build_cabal_target
#$(RM) -rf tmp
#$(MKDIR) tmp
#$(TAR) zxf $1 -C tmp
#if [ -d patches/$2 ]; then						\
#    (cd tmp/$2-$3 &&							\
#     for patch in ../../patches/$2/*; do $(PATCH) -p1 < $$patch; done);	\
#fi
#(cd tmp/$2-$3 && $(PLATFORM_GHC) -o setup -package Cabal Setup*hs)
#(cd tmp/$2-$3 &&							\
#  ./setup configure --global --prefix=$(PLATFORM_GHC_PATH)		\
#		    --with-compiler=$(PLATFORM_GHC)			\
#		    --with-hc-pkg=$(PLATFORM_GHC_PKG)			\
#		    --with-hsc2hs=$(PLATFORM_HSC2HS))
#(cd tmp/$2-$3 && ./setup build)
#(cd tmp/$2-$3 && ./setup install)
#$(RM) -rf tmp
#endef
#
#define build_cabalinst_target
#PATH=$(PLATFORM_GHC_PATH)/bin:$$PATH $(PLATFORM_CABAL) install $1-$2
#endef
